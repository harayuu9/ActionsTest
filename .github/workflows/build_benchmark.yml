name: CMake Benchmark
on:
  push:
    paths:
      - ".github/workflows/build_benchmark.yml"
      - "project/**"
env:
  IS_PERFORMANCE_TEST: TRUE

jobs:
  build:
    name: ${{ matrix.os }}.CPP${{ matrix.version }}
    runs-on: ${{ matrix.os }}
    env:
      CMAKE_C_COMPILER: ${{ matrix.cc }})
      CMAKE_CXX_COMPILER: ${{ matrix.cxx }})
      CPP_VERSION: ${{ matrix.version }})

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        version: ["17", "20"]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: create build environment
      run: |
        cmake -E make_directory ${{ runner.workspace }}/_build
        cmake -E make_directory ${{ runner.workspace }}/docs/Json

    - name: configure cmake
      shell: bash
      working-directory: ${{ runner.workspace }}/_build
      run: cmake -DBENCHMARK_ENABLE_TESTING=OFF -DBENCHMARK_DOWNLOAD_DEPENDENCIES=ON $GITHUB_WORKSPACE/project -DCMAKE_BUILD_TYPE=Release

    - name: build
      shell: bash
      working-directory: ${{ runner.workspace }}/_build
      run: cmake --build . --config Release

    - name: Run tests
      env:
        BENCHMARK_OUT: ${{ runner.workspace }}/docs/Json/${{ matrix.os }}.CPP${{ matrix.version }}.json
        BENCHMARK_FORMAT: json    
      shell: bash
      working-directory: ${{ runner.workspace }}/_build
      run: ctest -C Release -V --parallel 1

    - name: Show Dir
      run: |
        dir
        cd docs
        dir
        cd Json
        dir
        echo ${{ runner.workspace }}/docs/Json/${{ matrix.os }}.CPP${{ matrix.version }}.json
        pwd
        basename `pwd`

    - name: Commit files
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "actions"
        git add .
        git commit -m 'add benchmark result' && git push origin main

    - name: Save Log
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}.CPP${{ matrix.version }}
        path: ${{ runner.workspace }}/docs/Json/${{ matrix.os }}.CPP${{ matrix.version }}.json
  
  results:
    name: push result
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodule: TRUE

    - uses: FranzDiebold/github-env-vars-action@v1.2.1
    - name: Print environment variables
      run: |
        mkdir -p make_directory ${{ runner.workspace }}/docs/log/$CI_RUN_NUMBER

    - name: setup artifact
      uses: actions/download-artifact@v2
      with:
        path: ${{ runner.workspace }}/docs/log/$CI_RUN_NUMBER

    - name: result artifact upload
      uses: actions/upload-artifact@v2
      with:
        name: result
        path: ${{ runner.workspace }}/docs/log/$CI_RUN_NUMBER