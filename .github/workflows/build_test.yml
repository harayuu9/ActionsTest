name: CMake Test

on: [push, pull_request]

env:
  CMAKE_VERSION: 3.18.3
  NINJA_VERSION: 1.10.1
  CCACHE_VERSION: 3.7.7

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows MSVC-17 Debug",
            os: windows-latest,
            cc: "cl", cxx: "cl", version: "17", buildtype : "Debug",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Windows MSVC-17 Release",
            os: windows-latest,
            cc: "cl", cxx: "cl", version: "17", buildtype : "Release",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Windows MSVC-20 Debug",
            os: windows-latest,
            cc: "cl", cxx: "cl", version: "20", buildtype : "Debug",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Windows MSVC-20 Release",
            os: windows-latest,
            cc: "cl", cxx: "cl", version: "20", buildtype : "Release",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Ubuntu Latest GCC-17 Debug",
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++", version: "17", buildtype : "Debug"
          }
        - {
            name: "Ubuntu Latest GCC-17 Release",
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++", version: "17", buildtype : "Release"
          }
        - {
            name: "Ubuntu Latest GCC-20 Debug",
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++", version: "20", buildtype : "Debug"
          }
        - {
            name: "Ubuntu Latest GCC-20 Release",
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++", version: "20", buildtype : "Release"
          }
        - {
            name: "Ubuntu Latest Clang-17 Debug",
            os: ubuntu-latest,
            cc: "clang", cxx: "clang++", version: "17", buildtype : "Debug"
          }
        - {
            name: "Ubuntu Latest Clang-17 Release",
            os: ubuntu-latest,
            cc: "clang", cxx: "clang++", version: "17", buildtype : "Release"
          }
        - {
            name: "Ubuntu Latest Clang-20 Debug",
            os: ubuntu-latest,
            cc: "clang", cxx: "clang++", version: "20", buildtype : "Debug"
          }
        - {
            name: "Ubuntu Latest Clang-20 Release",
            os: ubuntu-latest,
            cc: "clang", cxx: "clang++", version: "20", buildtype : "Release"
          }
    steps:
    - env:
        CC ${{ matrix.config.cc }})
        CXX ${{ matrix.config.cxx }})
        CPP_VERSION ${{ matrix.config.version }})

    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: create build environment
      run: cmake -E make_directory

    - name: configure cmake
      shell: bash
      working-directory: ${{ runner.workspace }}/_build
      run: cmake -DBENCHMARK_ENABLE_TESTING=OFF -DBENCHMARK_DOWNLOAD_DEPENDENCIES=ON $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}

    - name: build
      shell: bash
      working-directory: ${{ runner.workspace }}/_build
      run: cmake --build . --config ${{ matrix.config.build_type }}

    - name: Run tests
      shell: bash
      working-directory: ${{ runner.workspace }}/build
      run: ctest -C ${{ matrix.config.build_type }}